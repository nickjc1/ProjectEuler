/*
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
 * By starting with 1 and 2, the first 10 terms will be:
        1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million(4,000,000). 
 * Find the sum of the even-valued terms. 
 */
import java.util.*;
public class EvenFibonacciNumbers {
	public static void main(String[] args) {
		ArrayList<Integer> fNumbers = fibonacciNumbers(4000000);
		
		int result = sumOfEvens(fNumbers);
		
		System.out.println("The sum of the even-valued terms is: " + result);
	}
	
	public static ArrayList<Integer> fibonacciNumbers(int maxDomain) {
		ArrayList<Integer> fNumbers = new ArrayList<>();
		fNumbers.add(1);
		fNumbers.add(2);
		int i = 2;
		do {
			fNumbers.add(fNumbers.get(i - 1) + fNumbers.get(i - 2));
			i++;
		}while(fNumbers.get(i - 1) < maxDomain);
		
		fNumbers.remove(i - 1);
		
		return fNumbers;
	}
	
	public static int sumOfEvens(ArrayList<Integer> numList) {
		int sum = 0;
		for(int n: numList) {
			if(n % 2 == 0) {
				sum += n;
			}
		}
		return sum;
	}

}
